{
  "hash": "6fc22cdf169734615662d7471eabf2b4",
  "result": {
    "markdown": "---\ntitle: \"First Team Meeting\"\nsubtitle: \"\"\ndescription:  |\n  This post details the steps you'll take for your first team meeting.\nauthor: \"Daniel Sussman\"\ndate: \"2023-10-13\"\nimage: \"a-business-team-giving-fist-bump-in-agreement.jpg\"\nimage-alt: \"\"\ncategories: []\ndate-modified: \"2023-10-13\"\ndraft: FALSE\n---\n\n\n![](a-business-team-giving-fist-bump-in-agreement.jpg)\n\nThese are the steps that you will take today to get started on your project.\nToday, you will just be brainstorming, and then next week, you'll get started on the main aspects of the project.\n\n1. Start by introducing yourselves to each other. I also recommend creating a private channel on Microsoft Teams with all your team members. This will be a place that you can communicate and share ideas, code, problems, etc.\n2. Discuss what aspects of the project each of you are more or less excited about. These include\n    a. Collecting, cleaning, and munging data ,\n    b. Statistical Modeling,\n    c. Visualization,\n    d. Writing about analyses, and\n    e. Managing and reviewing team work.\n3. Based on this, discuss where you feel your strengths and weaknesses might be.\n4. Next, start brainstorming questions you hope to answer as part of this project. This question should in some way be addressing issues around racial disparities. The questions you come up with should be at the level of the question we started with when exploring the HMDA data. (\"Are there differences in the ease of securing a loan based on the race of the applicant?\") You'll revise your questions a lot over the course of the project. Come up with a few questions that your group might be interested in exploring.\n5. Based on these questions, start looking around for data that might help you analyze this. If you are looking at U.S. based data, [data.gov](data.gov) is a good source and if you are looking internationally, I recommend checking out the World Bank. Also, try Googling for data. Include \"data set\" or \"dataset\" in your query. You might even include \"CSV\" or some other format. Using \"data\" by itself in your query often doesn't work too well. Spend some time searching for data and try to come up with at least three possible data sets. (Next week, you'll write short proposals about each of them that I'll give feedback on.)\n6. Come up with a team name. Next week, I'll provide the Github Classroom assignment that will be where you work on your final project and you'll have to have your team name finalized by then. Your project will be hosted online at the website with a URL like `sussmanbu.github.io/ma4615-fa23-final-project-TEAMNAME`.\n\nNext week, you'll get your final project website set up and write your first blog post.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\n  here::here(\"scripts\", \"load_and_clean_data.R\"),\n  echo = TRUE # Use echo=FALSE or omit it to avoid code output  \n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n> library(tidyverse)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n> loan_data <- read_csv(here::here(\"dataset\", \"loan_refusal.csv\"))\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 20 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): bank\ndbl (4): min, white, himin, hiwhite\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n> loan_data_clean <- loan_data\n\n> write_csv(loan_data_clean, file = here::here(\"dataset\", \n+     \"loan_refusal_clean.csv\"))\n\n> save(loan_data_clean, file = here::here(\"dataset/loan_refusal.RData\"))\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}