{
  "hash": "033fdc68a2085329255da45529852808",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Blog 4: Extended Statistical Modeling\"\ndescription:  |\n  Description of datasets found.\nauthor: \"TEAMATE\"\ndate: \"2025-03-31\"\ndraft: FALSE\n---\n\n\n\nNote: Experiment data is from 2019-2021, while census data is from 2019-2024. The following code aggregate application level data to the **state** level and merge it with the census data to calculate the proportion of applications by state.\n\nThis exercise will help us understand the background of the data on a state-by-state basis and explore the relationship between callback rates and other variables at the state level.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(list = ls())\n# hide warnings\noptions(warn = -1)\nsuppressPackageStartupMessages(library(ggplot2))\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(dplyr))\nsuppressPackageStartupMessages(library(stargazer))\nsuppressPackageStartupMessages(library(readxl))\nsuppressPackageStartupMessages(library(fixest))\n\ndata <- readRDS(\"dataset/cleaned_data.rds\")\ncensus_data <- read_excel('dataset/NST-EST2024-POP.xlsx')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\n• `` -> `...2`\n• `` -> `...3`\n• `` -> `...4`\n• `` -> `...5`\n• `` -> `...6`\n• `` -> `...7`\n```\n\n\n:::\n\n```{.r .cell-code}\ncensus_data_2 <- read_excel('dataset/nst-est2019-01.xlsx', skip = 3)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\n• `` -> `...1`\n```\n\n\n:::\n\n```{.r .cell-code}\n# for census_data_2 only keep year column 13 and row 6 onwards\ncensus_data_2 <- census_data_2 %>%\n  select(1, 13) %>%\n  slice(6:56) \n\n# rename first column to states \ncolnames(census_data_2)[1] <- \"states\"\n\n# delete . in front of state names\ncensus_data_2 <- census_data_2 %>% \n  filter(grepl(\"^\\\\.\", states)) %>%\n  mutate(states = gsub(\"^\\\\.\", \"\", states))\n```\n:::\n\n\n\n## Data Background and Context\n\nThe dataset originates from the landmark study *\"Systemic Discrimination Among Large U.S. Employers\"* (Kline, Rose, and Walters, 2022).\n\n-   **Research Questions:** The study explores whether discrimination is endemic to particular firms, investigates firm-level heterogeneity in callback rates, and considers the potential impact of industry, geographic location, and other structural factors.\n\nThe census data was retrieved from the United States Census Bureau at this link: https://www.census.gov/data/tables/time-series/demo/popest/2020s-state-total.html\n\n# Aggregating Application Data to State Level\nTo begin our analysis, we aggregate individual-level application data into state-level summaries. In this section, we create new variables such as the full name (and its length) and calculate the proportion of applicants with black-sounding names. These measures help us capture nuances in the data that might be related to potential discriminatory practices.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata$full_name <- paste(data$firstname, data$lastname)\ndata$name_length <- nchar(data$full_name)\nstate_data <- data %>%\n  group_by(state, year) %>%\n  summarise(\n    num_sub = n(),\n    callback_rate = mean(cb),\n    age = mean(age_at_sub),\n    name_length = mean(name_length),\n    proportion_black_name = sum(black == 1) / num_sub\n  ) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'state'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\nunique(state_data$state)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"AK\" \"AL\" \"AR\" \"AZ\" \"CA\" \"CO\" \"CT\" \"DC\" \"DE\" \"FL\" \"GA\" \"HI\" \"IA\" \"ID\" \"IL\"\n[16] \"IN\" \"KS\" \"KY\" \"LA\" \"MA\" \"MD\" \"ME\" \"MI\" \"MN\" \"MO\" \"MS\" \"MT\" \"NC\" \"ND\" \"NE\"\n[31] \"NH\" \"NJ\" \"NM\" \"NV\" \"NY\" \"OH\" \"OK\" \"OR\" \"PA\" \"RI\" \"SC\" \"SD\" \"TN\" \"TX\" \"UT\"\n[46] \"VA\" \"VT\" \"WA\" \"WI\" \"WV\" \"WY\"\n```\n\n\n:::\n:::\n\n\n\n# Cleaning and Reshaping Census Data - continued\n\nThe next step involves cleaning the census data. This dataset provides annual state population counts, which we reshape into a longitudinal (panel) format to facilitate merging with the state-level application data. The cleaning process includes renaming columns, removing extraneous rows, and filtering to include only the relevant states.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(census_data)[1] <- \"states\"\n\ncensus_data <- census_data %>% \n  select(-2) %>% \n  slice(-(1:3))\n\ncolnames(census_data)[2:6] <- c(\"2020\", \"2021\", \"2022\", \"2023\", \"2024\")\n\ncensus_data <- census_data %>% filter(grepl(\"^\\\\.\", states))\n\ncensus_data <- census_data %>% \n  filter(states != \".Puerto Rico\") %>%\n  mutate(states = gsub(\"^\\\\.\", \"\", states)) \n\n# add census_data_2 to census_data \ncensus_data <- census_data %>%\n  left_join(census_data_2, by = \"states\") \n```\n:::\n\n\n\n# Clean Population Data to Longitudinal Format\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create a state abbr column for merging\ncensus_data$state_abbr <- toupper(substr(census_data$states, 1, 2))\n\n# reshape the data into state-year panel\ncensus_data_long <- census_data %>%\n  pivot_longer(\n    cols = -c(states, state_abbr),\n    names_to = \"year\",\n    values_to = \"population\",\n    values_transform = list(population = as.numeric)\n  ) %>%\n  mutate(year = as.numeric(year))\n\n# check unique state_abbr\nunique(census_data$states)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Alabama\"              \"Alaska\"               \"Arizona\"             \n [4] \"Arkansas\"             \"California\"           \"Colorado\"            \n [7] \"Connecticut\"          \"Delaware\"             \"District of Columbia\"\n[10] \"Florida\"              \"Georgia\"              \"Hawaii\"              \n[13] \"Idaho\"                \"Illinois\"             \"Indiana\"             \n[16] \"Iowa\"                 \"Kansas\"               \"Kentucky\"            \n[19] \"Louisiana\"            \"Maine\"                \"Maryland\"            \n[22] \"Massachusetts\"        \"Michigan\"             \"Minnesota\"           \n[25] \"Mississippi\"          \"Missouri\"             \"Montana\"             \n[28] \"Nebraska\"             \"Nevada\"               \"New Hampshire\"       \n[31] \"New Jersey\"           \"New Mexico\"           \"New York\"            \n[34] \"North Carolina\"       \"North Dakota\"         \"Ohio\"                \n[37] \"Oklahoma\"             \"Oregon\"               \"Pennsylvania\"        \n[40] \"Rhode Island\"         \"South Carolina\"       \"South Dakota\"        \n[43] \"Tennessee\"            \"Texas\"                \"Utah\"                \n[46] \"Vermont\"              \"Virginia\"             \"Washington\"          \n[49] \"West Virginia\"        \"Wisconsin\"            \"Wyoming\"             \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(state_data$year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2020 2021 2019\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(census_data_long$year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2020 2021 2022 2023 2024 2019\n```\n\n\n:::\n:::\n\n\nWe further process the census data to create a state-year panel, including the state abbreviations necessary for merging with the experimental data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstate_mapping <- tibble::tribble(\n  ~states,                     ~state_abbr_exp,\n  \"Alabama\",                   \"AL\",\n  \"Alaska\",                    \"AK\",\n  \"Arizona\",                   \"AZ\",\n  \"Arkansas\",                  \"AR\",\n  \"California\",                \"CA\",\n  \"Colorado\",                  \"CO\",\n  \"Connecticut\",               \"CT\",\n  \"Delaware\",                  \"DE\",\n  \"District of Columbia\",      \"DC\",\n  \"Florida\",                   \"FL\",\n  \"Georgia\",                   \"GA\",\n  \"Hawaii\",                    \"HI\",\n  \"Idaho\",                     \"ID\",\n  \"Illinois\",                  \"IL\",\n  \"Indiana\",                   \"IN\",\n  \"Iowa\",                      \"IA\",\n  \"Kansas\",                    \"KS\",\n  \"Kentucky\",                  \"KY\",\n  \"Louisiana\",                 \"LA\",\n  \"Maine\",                     \"ME\",\n  \"Maryland\",                  \"MD\",\n  \"Massachusetts\",             \"MA\",\n  \"Michigan\",                  \"MI\",\n  \"Minnesota\",                 \"MN\",\n  \"Mississippi\",               \"MS\",\n  \"Missouri\",                  \"MO\",\n  \"Montana\",                   \"MT\",\n  \"Nebraska\",                  \"NE\",\n  \"Nevada\",                    \"NV\",\n  \"New Hampshire\",             \"NH\",\n  \"New Jersey\",                \"NJ\",\n  \"New Mexico\",                \"NM\",\n  \"New York\",                  \"NY\",\n  \"North Carolina\",            \"NC\",\n  \"North Dakota\",              \"ND\",\n  \"Ohio\",                      \"OH\",\n  \"Oklahoma\",                  \"OK\",\n  \"Oregon\",                    \"OR\",\n  \"Pennsylvania\",              \"PA\",\n  \"Rhode Island\",              \"RI\",\n  \"South Carolina\",            \"SC\",\n  \"South Dakota\",              \"SD\",\n  \"Tennessee\",                 \"TN\",\n  \"Texas\",                     \"TX\",\n  \"Utah\",                      \"UT\",\n  \"Vermont\",                   \"VT\",\n  \"Virginia\",                  \"VA\",\n  \"Washington\",                \"WA\",\n  \"West Virginia\",             \"WV\",\n  \"Wisconsin\",                 \"WI\",\n  \"Wyoming\",                   \"WY\"\n)\n\ncensus_data_long <- census_data_long %>%\n  left_join(state_mapping, by = \"states\")\n\nmerged_data <- state_data %>%\n  left_join(\n    census_data_long %>% select(state_abbr_exp, year, population),\n    by = c(\"state\" = \"state_abbr_exp\", \"year\" = \"year\")\n  )\n\n# define total_num_sub \nmerged_data <- merged_data %>%\n  group_by(year,state) %>%\n  mutate(total_num_sub = sum(num_sub)) %>%\n  ungroup()\n\n# define the proportion_of_applicants column\nmerged_data <- merged_data %>%\n  mutate(proportion_of_applicants = total_num_sub / population)\n\n#plot proportion of applications by state (facet by year)\n# merged_data %>%\n# ggplot(aes(x = reorder(state, proportion_of_applicants), y = proportion_of_applicants)) +\n# geom_bar(stat = \"identity\", fill = \"skyblue\", color = \"black\") +\n# coord_flip() +\n# facet_wrap(~year, scales = \"free\") +\n# labs(\n# title = \"Proportion of Applications/Population Size by State\",\n# y = \"Proportion of Applicants\",\n# x = \"State\"\n# )\n```\n:::\n\n\n\n# Plot callback rate by state (facet by year)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnational_summary <- merged_data %>%\n  group_by(year) %>%\n  summarise(\n    mean_callback = mean(callback_rate, na.rm = TRUE),\n  )\n\nggplot(merged_data, aes(x = reorder(state, callback_rate, FUN = median), y = callback_rate)) +\n  geom_violin(fill = \"skyblue\", color = \"black\", na.rm = TRUE) +\n  geom_jitter(width = 0.2, size = 1, alpha = 0.6) +\n  geom_hline(data = national_summary, aes(yintercept = mean_callback), color = \"darkred\", linetype = \"dashed\") +\n  coord_flip() +\n  facet_wrap(~year, scales = \"free\", drop = FALSE) +\n  labs(\n    title = \"Callback Rate by State with Annual National Mean\",\n    y = \"Callback Rate\",\n    x = \"State\"\n  )\n```\n\n::: {.cell-output-display}\n![](blog-4_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n\n# Statistical Modeling (Linear): Relating Age to Callback Success\n\nIn the first model, we transform the callback rate into a count of successes by multiplying it with the number of submissions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerged_data <- merged_data %>%\n  mutate(success = callback_rate * num_sub)\nmod_1 <-lm(success ~ age, data = merged_data)\nstargazer(mod_1, type = \"text\", digits = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n===============================================\n                        Dependent variable:    \n                    ---------------------------\n                              success          \n-----------------------------------------------\nage                           15.967*          \n                              (9.511)          \n                                               \nConstant                     -524.496          \n                             (391.920)         \n                                               \n-----------------------------------------------\nObservations                    151            \nR2                             0.019           \nAdjusted R2                    0.012           \nResidual Std. Error     150.934 (df = 149)     \nF Statistic            2.818* (df = 1; 149)    \n===============================================\nNote:               *p<0.1; **p<0.05; ***p<0.01\n```\n\n\n:::\n:::\n\n\nWhile the linear model is a simplification, it serves as a starting point for our further investigation using fixed effects.\n\n### Findings:\n\n-   Positive coefficient (β = 15.967, p = 0.093)\n-   Suggests 1-year age increase → \\~16 more callbacks\n-   Marginally significant relationship (p \\< 0.1)\n\n\n# Visualizing the Relationship between Callback Rate and Age (Logit)\n\nTo complement our regression analysis, we visualize the relationship between age and callback rate using a scatter plot with a fitted smooth curve. This plot helps to highlight any nonlinearities or trends that may not be apparent from the regression output alone.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerged_data %>%\n  ggplot(aes(x = age, y = callback_rate)) +\n  geom_point() +\n  geom_smooth(method = \"glm\", \n              method.args = list(family = binomial(link = \"logit\")), \n              se = TRUE) +\n  labs(\n    title = \"Relationship between Callback Rate and Age (Logit)\",\n    y = \"Callback Rate\",\n    x = \"Age\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](blog-4_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n\n#  Fixed Effect: Effect of Age on Success within States\n\nThe first fixed effects model controls for state-specific characteristics. Here, we decompose age and success into their within-state (demeaned) components, allowing us to examine the relationship between these variables within each state.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerged_data <- merged_data %>%\n  mutate(success = callback_rate * num_sub)\n  # here we convert the callback rate to the number of callbacks for the fixed effects linear model\n\n# within-state variations\nmod_2 <- feols(success ~ age | state, data = merged_data)\nsummary(mod_2) # positive significant effect of age on success (but this is for all age groups)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOLS estimation, Dep. Var.: success\nObservations: 151\nFixed-effects: state: 51\nStandard-errors: Clustered (state) \n    Estimate Std. Error t value Pr(>|t|)    \nage  14.3495    5.64623 2.54143 0.014188 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nRMSE: 105.6     Adj. R2: 0.262927\n              Within R2: 0.020129\n```\n\n\n:::\n:::\n\n\n\n### **Findings:**\n\n-   Negative coefficient (β = 14.3495, p = \t0.014188)\n\n-   Within the same state: 1-year age increase → \\~14.3 more callbacks for all age groups on average.\n\n\n# Visualizing the relationship between callback rate and age under fixed effect\nWe then visualize this within-state relationship by plotting the demeaned variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# demean age: \nmod_age <- feols(age ~ 1 | state, data = merged_data)\nmerged_data <- merged_data %>%\n  mutate(age_demeaned = resid(mod_age))\n\n# demean success:\nmod_rate <- feols(success ~ 1 | state, data = merged_data)\nmerged_data <- merged_data %>%\n  mutate(success_demeaned = resid(mod_rate))\n\nggplot(merged_data, aes(x = age_demeaned, y = success_demeaned)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"lm\", color = \"blue\") +\n  labs(\n    title = \" Relationship between Number of Successful Application and Age (Within-State)\",\n    x = \"Age\",\n    y = \"Number of Successful Application\"\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](blog-4_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n=======\n# Between Fixed Effect: Effect of Age on Success between States\n\nFinally, we assess the effect of age on success between states while controlling for year-specific effects. This model examines whether differences in average age across states are associated with variations in callback success at a broader level.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod_3 <- feols(success ~ age |year, data = merged_data)\nsummary(mod_3) # no significant effect of age on success \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nOLS estimation, Dep. Var.: success\nObservations: 151\nFixed-effects: year: 3\nStandard-errors: Clustered (year) \n    Estimate Std. Error  t value Pr(>|t|) \nage    1.451    3.08765 0.469936  0.68466 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nRMSE: 129.9     Adj. R2: 0.248447\n              Within R2: 1.778e-4\n```\n\n\n:::\n:::\n\n\n\n# save the merged data for future use\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(merged_data, \"dataset/merged_data_state_by_year.rds\")\n```\n:::\n",
    "supporting": [
      "blog-4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}